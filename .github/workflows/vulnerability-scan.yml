name: vulnerability-scan
on:
  schedule:
    - cron:
        "55 06 * * *" # build at 06:55 am UTC every day
        # (50 minutes after custom image build was triggered)
  push:
    paths-ignore:
      - "**/build-image.yml"
      - "**/release-please.yml"
      - "**/recompress-latest.yml"
      - "**/composition-analysis.yml"
      - "**.md"
      - "**/.gitkeep"
      - "build-isos"
      - "renovate.json"
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}

env:
  IMAGE_REF: ""
  REGISTRY_USERNAME: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ github.token }}
  REGISTRY_IMG_PATH: ghcr.io/${{ github.repository_owner }}

jobs:
  scan:
    name: Scan Custom Image
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: read
      security-events: write
    strategy:
      fail-fast: true
      matrix:
        package:
          - aubertit
          - buttgenbachit
          - carbonatcyanotrichit
          - flaviramea
    steps:
      - name: Wait up to 3m to compensate for rate limiting
        run: sleep $((RANDOM % 180))

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Construct lowercase image reference
        run: echo "IMAGE_REF=${REGISTRY_IMG_PATH@L}/${{ matrix.package }}" >$GITHUB_ENV

      - name: Generate SARIF for Custom Image with Trivy
        uses: aquasecurity/trivy-action@0.29.0
        with:
          format: sarif
          github-pat: ${{ github.token }}
          image-ref: ${{ env.IMAGE_REF }}
          output: trivy-results.sarif
          scan-type: image
          scanners: vuln,misconfig,license
          severity: MEDIUM,HIGH,CRITICAL
        env:
          TRIVY_USERNAME: ${{ env.REGISTRY_USERNAME }}
          TRIVY_PASSWORD: ${{ env.REGISTRY_PASSWORD }}

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          category: trivy-${{ matrix.package }}
          sarif_file: trivy-results.sarif
