name: recompress-latest
on:
  workflow_dispatch: # allow manually triggering builds
  push:
    paths-ignore:
      - "**/build-image.yml"
      - "**/release-please.yml"
      - "**/vulnerability-scan.yml"
      - "**/composition-analysis.yml"
      - "**.md"
      - "**/.gitkeep"
      - "build-isos"
      - "renovate.json"
  schedule:
    - cron:
        "10 07 * * 1,3,5" # build at 07:10 UTC on Mon, Wed, Fr
        # (60 minutes after bluebuild images start building)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  IMAGE_REF: ""
  REGISTRY_USERNAME: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ github.token }}
  REGISTRY_IMG_PATH: ghcr.io/${{ github.repository_owner }}

jobs:
  recompress:
    name: Recompress Custom Image
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: true
      matrix:
        package:
          - aubertit
          - buttgenbachit
          - carbonatcyanotrichit
          - flaviramea
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          overprovision-lvm: true
          remove-android: true
          remove-codeql: true
          remove-docker-images: true
          remove-dotnet: true
          remove-haskell: true

      - name: Checkout codeZ
        uses: actions/checkout@v4

      - name: Construct lowercase image reference
        run: echo "IMAGE_REF=${REGISTRY_IMG_PATH@L}/${{ matrix.package }}:latest" >$GITHUB_ENV

      # This is something the community works for quite a long time
      #   but it likely will improve the efficiency of transfers;
      #    this was made to workaround the fact that blue-build
      #     does not yet support zstd:chunked and it depends
      #      on bootc/rpm-ostree having implemented this.
      #       No OS image must be pushed in this form,
      #        except to non-productive image tags.
      #
      # Changetracker
      #   https://fedoraproject.org/wiki/Changes/zstd:chunked
      #   https://github.com/containers/storage/pull/775
      # Documentation
      #   https://universal-blue.discourse.group/t/zst-chunked-faq/3462
      # Projectstuffz
      #   https://github.com/blue-build/cli/issues/112
      #   https://github.com/containers/bootc/issues/20
      #   https://github.com/containers/bootc/issues/963
      - name: Tag latest as latest-zstchd
        id: pull
        run: |
          set -eux pipefail

          podman login ghcr.io \
            --username ${{ env.REGISTRY_USERNAME }} \
            --password ${{ env.REGISTRY_PASSWORD }}

          podman pull "${{ env.IMAGE_REF }}"
          podman tag  "${{ env.IMAGE_REF }}" "${{ env.IMAGE_REF }}-zstchd" # zstd:chunked

      - name: Push To GHCR with Podman in zstd:chunked
        uses: redhat-actions/push-to-registry@v2
        id: push
        with:
          tags: ${{ env.IMAGE_REF }}-zstchd
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}
          extra-args: |
            --compression-format=zstd:chunked

      # Sign recompressed container image
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - uses: sigstore/cosign-installer@v3.8.1

      - name: Sign container image
        id: sign
        run: |
          echo "${{ env.COSIGN_PRIVATE_KEY }}" >cosign.key
          wc -c cosign.key
          cosign sign -y --key cosign.key ${{ env.IMAGE_REF }}@${TAGS}
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
          TAGS: ${{ steps.push.outputs.digest }}

      - name: Print outputs
        run: |
          echo '${{ toJSON(steps.pull.outputs) }}' | jq .
          echo '${{ toJSON(steps.push.outputs) }}' | jq .
          echo '${{ toJSON(steps.sign.outputs) }}' | jq .
