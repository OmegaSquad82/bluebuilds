#!/usr/bin/env bash
## devhints.io/bash
set -euo pipefail
IFS=$'\n\t'

# ensure sysfs knobs can be meddled with
if [[ $(/usr/bin/id -u) -ne 0 ]]; then
    echo "Not running as root"
    exit
fi

traperr() {
    echo "ERROR: ${BASH_SOURCE[1]} at about ${BASH_LINENO[0]}"
}

set -o errtrace
trap traperr ERR

# comment out
DEBG=${DEBUG-:}
NOOP=
while [[ $# -gt 0 ]]; do
    case "${1:-}" in
    --debug | --verbose | -d)
        DEBG=
        ;;
    --noop | --dry-run | -n)
        NOOP=:
        ;;
    esac
    shift
done

function print_states() {
    if [[ -f /sys/kernel/debug/zram/"$1"/block_state ]]; then
        block_state="$(cat /sys/kernel/debug/zram/"$1"/block_state)"
        function state() {
            echo "$block_state" | grep -cs "$1" || true
        }
        echo -en "block_state=[huge: $(state 'h')\tidle: $(state 'i')\trcmp: $(state 'r')\tnone: $(state 'n')\ttotal: $(state '')]"
    fi
}

export TIMEFORMAT=$'real: %3lR\tuser: %3lU\tsys: %3lS'

# recompress then compact pages
for drive in /dev/zram*; do
    device="${drive##*/}"
    sysblk=/sys/block/"$device"

    $DEBG zramctl --output-all "$drive"
    $DEBG cat "$sysblk"/recomp_algorithm

    $DEBG print_states "$device"

    if [[ -f "$sysblk"/recompress ]]; then
        $DEBG echo -e " λ ${NOOP}echo ${TYPE:-type=huge}\t>$sysblk/recompress"
        $NOOP echo "${TYPE:-type=huge}" >"$sysblk"/recompress
    fi
    $DEBG print_states "$device"

    if [[ -f "$sysblk"/compact ]]; then
        $DEBG echo -e " λ ${NOOP}echo\t\t>$sysblk/compact"
        $NOOP echo >"$sysblk"/compact
    fi
    $DEBG zramctl --output-all "$drive"
done
